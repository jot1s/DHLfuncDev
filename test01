import http.client
import urllib.parse
import json
from datetime import datetime
import os
# Import modules for Excel handling
import openpyxl as xl_read
import xlsxwriter as xl_writer
import PySimpleGUI as sg
import pandas as pd


# path = "C:\\game\\DHLfuncDev\\DHL_API_Sheet.xlsx"

current_directory = os.path.dirname(__file__)
# Construct the new path relative to the current directory
path = os.path.join(current_directory, "DHL_API_Sheet.xlsx")
# Use the new path
print("Relative path:", path)

wb_obj = xl_read.load_workbook(path)
sheetName = "Sheet1"
baseRow = 1   ## base row start with row 2
sheet_obj = wb_obj[sheetName]   ## checking the sheet object in the page call "Sheet1"

def SendAPI(trackingNumber):
    params = urllib.parse.urlencode({
        # 'trackingNumber': '6921406671',
        'trackingNumber': "'" + str(trackingNumber) + "'",
        'service': 'express'
    })

    headers = {
        'Accept': 'application/json',
        'DHL-API-Key': 'apI1hL9eB7gG7b'
    }

    connection = http.client.HTTPSConnection("api-eu.dhl.com")

    connection.request("GET", "/track/shipments?" + params, "", headers)
    response = connection.getresponse()

    status = response.status
    reason = response.reason
    data = json.loads(response.read())

    print("Status: {} and reason: {}".format(status, reason))
    print(data)
    
    connection.close()
    return data

def CheckInfo_API(trackingNumber, x, y):
    print("trackingNumber: ", trackingNumber  , "Row: " ,x , "Column: " ,y)
    
    data = SendAPI(trackingNumber)
    # 提取需要的信息
    desired_info = data['shipments'][0]['events'][0]['description']
    end_time=data['shipments'][0]['events'][0]['timestamp']
    start_time=data['shipments'][0]['events'][-1]['timestamp']
    status = data['shipments'][0]['status']['status']
    origin = data['shipments'][0]['origin']['address']['addressLocality']
    destination = data['shipments'][0]['destination']['address']['addressLocality']
    print(status)
    print(origin)
    print(destination)
    print(end_time)
    print(start_time)
    
    # Parse ISO formatted date-time
    end_datetime = datetime.strptime(end_time, "%Y-%m-%dT%H:%M:%S")
    start_datetime = datetime.strptime(start_time, "%Y-%m-%dT%H:%M:%S")

    # Format as Excel-compatible date and time strings
    # excel_date = parsed_datetime.strftime("%Y-%m-%d")
    # excel_time = parsed_datetime.strftime("%H:%M:%S")
    duration_time = end_datetime - start_datetime
    # print("Excel Date:", excel_date)
    # print("Excel Time:", excel_time)
    print(duration_time)
    
    WriteInfo_excel(x, 3 , status )  ## status column 
    WriteInfo_excel(x, 4 , origin )  ## status column 
    WriteInfo_excel(x, 5 , start_datetime )  ## status column 
    WriteInfo_excel(x, 6 , destination ) ## status column 
    WriteInfo_excel(x, 7 , end_datetime ) ## status column 
    WriteInfo_excel(x, 8 , duration_time ) ## status column 
    # WriteInfo_excel(x, 6 , str(event) )
    

def WriteInfo_excel(x, y, value):
    print("WriteInfo_excel: ", x, y, value)
    sheet_obj.cell(x, y).value = value
    wb_obj.save(path)



sg.theme('Dark Brown')   


layout = [

    [sg.Text("Auto fill-in Excel" , justification='center',size=(50,1))],
    [sg.Button('Open Excel'), sg.Button('TrackingNumber API fillin')]
    
]

window = sg.Window("Column Demo", layout)
while True:
    event, values = window.read()
    
    if event == "Open Excel":
        os.startfile(path)
        break
    
    if event == "TrackingNumber API fillin":

        for i in range(1, 10):   ## for loop row to check trackingnumber is exist
            status_row = sheet_obj.cell( baseRow + i, 3).value
            trackingNumber_row  = sheet_obj.cell( baseRow + i, 1).value  
            # print("sheet_obj: ", sheet_obj.cell( baseRow + i, 3).value)  ##Checking Status
            
            if trackingNumber_row == None:
                break

            if status_row == None and trackingNumber_row != None:  ##  is None
                CheckInfo_API(sheet_obj.cell(baseRow + i, 1).value , baseRow + i, 1 )
            else:
                print("Status and TrackingNumber == None ", status_row)
        
        # 读取 Excel 文件
        # df = pd.read_excel(r"C:\game\DHLfuncDev\DHL_API_Sheet.xlsx", engine='openpyxl')

        # # 将整列数据转换为列表
        # column_list = df.iloc[:, 0].tolist()  # 使用 iloc 方法来选择列，索引 0 表示第一列

        # print(column_list)
        
  
window.close()


#     if (sheet_obj[
#     print("sheet_obj: ", sheet_obj.cell(i, 1).value)  ## (1,1) output "Tracking Number" (A1)

# trackingNumber = sheet_obj.cell(2, 1).value
# print( "sheet_obj: ",  sheet_obj.cell(2, 1).value  )  ## (1,1) output "Tracking Number" (A1)


# params = urllib.parse.urlencode({
#     # 'trackingNumber': '6921406671',
#     # 'trackingNumber': "'" + str(trackingNumber) + "'",
#     'service': 'express'
# })

# headers = {
#     'Accept': 'application/json',
#     'DHL-API-Key': 'apI1hL9eB7gG7b'
# }

# connection = http.client.HTTPSConnection("api-eu.dhl.com")

# connection.request("GET", "/track/shipments?" + params, "", headers)
# response = connection.getresponse()

# status = response.status
# reason = response.reason
# data = json.loads(response.read())

# print("Status: {} and reason: {}".format(status, reason))
# print(data)

# connection.close()